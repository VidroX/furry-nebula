name: Build and deploy an app to Kubernetes cluster

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  GO_VERSION: "1.20.5"
  WORKING_DIRECTORY: "./server"
  ENVIRONMENT_TYPE: "furry-nebula"
  IMAGE_NAME: "ghcr.io/vidrox/furry-nebula:latest"
  ESCAPED_IMAGE_NAME: 'ghcr.io\/vidrox\/furry-nebula:latest'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Create an empty .env file required for testing
        run: |
          touch ${{ env.ENVIRONMENT_TYPE }}.env
        shell: bash

      - name: Install dependencies
        run: go mod tidy

      - name: Test
        run: go test -v ./...

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./server
          platforms: linux/arm64
          tags: |
            ghcr.io/vidrox/furry-nebula:latest
            ghcr.io/vidrox/furry-nebula:${{ github.sha }}

  deploy:
    name: Deploy
    needs: [ test, build ]
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_API_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
          
      - uses: actions/checkout@v3
      
      - name: Replace environment variables
        run: |
          sed -i 's/{ENVIRONMENT}/${{ env.ENVIRONMENT_TYPE }}/g' manifests/ingress.yaml &&\
          sed -i 's/{HOST}/${{ secrets.HOST }}/g' manifests/ingress.yaml &&\
          sed -i 's/{ENVIRONMENT}/${{ env.ENVIRONMENT_TYPE }}/g' manifests/service.yaml &&\
          sed -i 's/{ENVIRONMENT}/${{ env.ENVIRONMENT_TYPE }}/g' manifests/deployment.yaml &&\
          sed -i 's/{IMAGE}/${{ env.ESCAPED_IMAGE_NAME }}/g' manifests/deployment.yaml

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: furry-nebula
          manifests: |
            manifests/deployment.yaml
            manifests/ingress.yaml
            manifests/service.yaml
          images: |
            ghcr.io/vidrox/furry-nebula:${{ github.sha }}
